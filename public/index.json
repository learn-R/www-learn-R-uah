[{"authors":null,"categories":null,"content":"I have included a bunch of extra resources and guides related to causal inference, program evaluation, R, data, and other relevant topics. Enjoy!\n","date":1588291200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1588291200,"objectID":"e5656835a9d5f0c69a44e56dc2b58101","permalink":"/resource/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/","section":"resource","summary":"I have included a bunch of extra resources and guides related to causal inference, program evaluation, R, data, and other relevant topics. Enjoy!","tags":null,"title":"Helpful resources","type":"docs"},{"authors":null,"categories":null,"content":"Visit this section after you have finished the readings and lecture videos. It contains fully annotated R code and other supplementary information and it will be indispensable as you work on your problem sets and project.\nMany sections also contain videos of me live coding the examples so you can see what it looks like to work with R in real time. You\u0026rsquo;ll notice me make all sorts of little errors, which is totally normal—everyone does!\n","date":1630281600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1630281600,"objectID":"e9b55dc35cd7c0402d035e510f00bf75","permalink":"/example/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/example/","section":"example","summary":"Visit this section after you have finished the readings and lecture videos. It contains fully annotated R code and other supplementary information and it will be indispensable as you work on your problem sets and project.","tags":null,"title":"Prácticos (códigos de ejemplo)","type":"docs"},{"authors":null,"categories":null,"content":"Cada sesión de clases está dividida por una pestaña que puedes ver al costado izquierdo de tu pantalla. Dentro de cada página por sesión podrás encontrar\n (Slides) que es la presentación mostrada en clases. Encontrarás estos botones de modo de facilitar la descarga de la presentación y explorar las presentaciones   Ver las slides en una nueva ventana  Descargar las slides en PDF\nLa presentación también se puede ver directamente desde el sitio web del curso. Puedes presionar estas presentaciones y puedes navegar en ellas con ← y →. Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver una lista de comandos que te permitirán interactuar con ellos (por ejemplo, f sirve para ver en pantalla completa. También p modo presentador si quieres ver las notas. El lápiz en la esquina derecha te permite dejar tus propias notas).\n  Video de la grabación de la clase, que además estará disponible en la nube de Zoom\n  Material asociado a la clase, lo que incluye los ejemplos prácticos y contenido adicional que puede potenciar sus aprendizajes.\n  ","date":1628467200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1628467200,"objectID":"8899c927408853efa5f455eaa551e047","permalink":"/content/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/content/","section":"content","summary":"Cada sesión de clases está dividida por una pestaña que puedes ver al costado izquierdo de tu pantalla. Dentro de cada página por sesión podrás encontrar\n (Slides) que es la presentación mostrada en clases.","tags":null,"title":"Clases, prácticos y materiales","type":"docs"},{"authors":null,"categories":null,"content":"Evaluaciones Las evaluaciones del curso se componen de tareas (70% de la nota final) y la entrega de una investigación (30% de la nota final), en dónde en ambos casos la/el estudiante deberá seleccionar datos y temas de interés de modo de acercar la aplicación del software a contextos de investigación propios de la/el estudiante. En concreto, cada evaluación consiste en:\n1. Tareas (70% de la nota final): consisten en evaluaciones parciales temáticas que buscan poner en práctica los aprendizajes expuestos en la sesión de clases y herramientas reforzadas en los prácticos. El promedio de notas las de tareas será calculado solo con las cuatro mejores entregas a partir de la Tarea 1 (25% c/u)1. La evaluación es individual o en parejas (la misma durante todo el semestre).\n2. Investigación final (30% de la nota final): consiste en una evaluación final que aplica los conocimientos y herramientas entregadas a lo largo de curso, a un proyecto de investigación de elección por el/la estudiante. La evaluación es individual.\nCalendario de actividades El calendario de actividades se puede revisar con detención en la pestaña planificación. Un resumen breve de las tareas es\n   Evaluación Formato Fecha Ponderación Nota Final     Tarea 4 tareas1 Hasta Viernes de la semana informada 70% (25% c/u)   Investigación Única entrega 22 de noviembre 30%      Es decir, a lo largo del semestre deberá entregar 6 tareas: 5 calificadas (Tarea 1 a Tarea 5) y 1 no (Tarea 0). De las 5 tareas restantes, solo las 4 mejores serán consideradas en su promedio de las tareas. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1628467200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1628467200,"objectID":"e18c399687bc0897ffd6503c7a1bbb8e","permalink":"/assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignment/","section":"assignment","summary":"Evaluaciones Las evaluaciones del curso se componen de tareas (70% de la nota final) y la entrega de una investigación (30% de la nota final), en dónde en ambos casos la/el estudiante deberá seleccionar datos y temas de interés de modo de acercar la aplicación del software a contextos de investigación propios de la/el estudiante.","tags":null,"title":"Sobre las evaluaciones","type":"docs"},{"authors":null,"categories":null,"content":"You will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.\nRStudio.cloud R is free, but it can sometimes be a pain to install and configure. To make life easier, you can (and should!) use the free RStudio.cloud service initially, which lets you run a full instance of RStudio in your web browser. This means you won\u0026rsquo;t have to install anything on your computer to get started with R! We will have a shared class workspace in RStudio.cloud that will let you quickly copy templates for labs and problem sets.\nGo to https://rstudio.cloud/ and create an account. You\u0026rsquo;ll receive a link to join the shared class workspace separately. If you don\u0026rsquo;t get this link, let me know and I will invite you.\nRStudio on your computer RStudio.cloud is convenient, but it can be slow and it is not designed to be able to handle larger datasets, more complicated analysis, or fancier graphics. Over the course of the semester, you should wean yourself off of RStudio.cloud and install all these things locally. This is also important if you want to customize fonts, since RStudio.cloud has extremely limited support for fonts other than Helvetica.\nHere\u0026rsquo;s how you install all these things\nInstall R First you need to install R itself (the engine).\n  Go to the CRAN (Collective R Archive Network)^[It\u0026rsquo;s a goofy name, but CRAN is where most R packages—and R itself—lives.] website: https://cran.r-project.org/\n  Click on \u0026ldquo;Download R for XXX\u0026rdquo;, where XXX is either Mac or Windows:\n  If you use macOS, scroll down to the first .pkg file in the list of files (in this picture, it\u0026rsquo;s R-4.0.0.pkg; as of right now, the current version is also 4.0.0) and download it.\n  If you use Windows, click \u0026ldquo;base\u0026rdquo; (or click on the bolded \u0026ldquo;install R for the first time\u0026rdquo; link) and download it.\n    Double click on the downloaded file (check your Downloads folder). Click yes through all the prompts to install like any other program.\n  If you use macOS, download and install XQuartz. You do not need to do this on Windows.\n  Install RStudio Next, you need to install RStudio, the nicer graphical user interface (GUI) for R (the dashboard). Once R and RStudio are both installed, you can ignore R and only use RStudio. RStudio will use R automatically and you won\u0026rsquo;t ever have to interact with it directly.\n  Go to the free download location on RStudio\u0026rsquo;s website: https://www.rstudio.com/products/rstudio/download/#download\n  The website should automatically detect your operating system (macOS or Windows) and show a big download button for it:\nIf not, scroll down a little to the large table and choose the version of RStudio that matches your operating system.\n  Double click on the downloaded file (again, check your Downloads folder). Click yes through all the prompts to install like any other program.\n  Double click on RStudio to run it (check your applications folder or start menu).\nInstall tidyverse R packages are easy to install with RStudio. Select the packages panel, click on \u0026ldquo;Install,\u0026rdquo; type the name of the package you want to install, and press enter.\nThis can sometimes be tedious when you\u0026rsquo;re installing lots of packages, though. The tidyverse, for instance, consists of dozens of packages (including ggplot2) that all work together. Rather than install each individually, you can install a single magical package and get them all at the same time.\nGo to the packages panel in RStudio, click on \u0026ldquo;Install,\u0026rdquo; type \u0026ldquo;tidyverse\u0026rdquo;, and press enter. You\u0026rsquo;ll see a bunch of output in the RStudio console as all the tidyverse packages are installed.\nNotice also that RStudio will generate a line of code for you and run it: install.packages(\u0026quot;tidyverse\u0026quot;). You can also just paste and run this instead of using the packages panel.\nInstall tinytex When you knit to PDF, R uses a special scientific typesetting program named LaTeX (pronounced \u0026ldquo;lay-tek\u0026rdquo; or \u0026ldquo;lah-tex\u0026rdquo;; for goofy nerdy reasons, the x is technically the \u0026ldquo;ch\u0026rdquo; sound in \u0026ldquo;Bach\u0026rdquo;, but most people just say it as \u0026ldquo;k\u0026rdquo;—saying \u0026ldquo;layteks\u0026rdquo; is frowned on for whatever reason).\nLaTeX is neat and makes pretty documents, but it\u0026rsquo;s a huge program—the macOS version, for instance, is nearly 4 GB! To make life easier, there\u0026rsquo;s an R package named tinytex that installs a minimal LaTeX program and that automatically deals with differences between macOS and Windows.\nHere\u0026rsquo;s how to install tinytex so you can knit to pretty PDFs:\n Use the Packages in panel in RStudio to install tinytex like you did above with tidyverse. Alternatively, run install.packages(\u0026quot;tinytex\u0026quot;) in the console. Run tinytex::install_tinytex() in the console. Wait for a bit while R downloads and installs everything you need. The end! You should now be able to knit to PDF.  ","date":1588291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588291200,"objectID":"c5e6c5f0d0baae071e282245bbba803c","permalink":"/resource/install/","publishdate":"2020-05-01T00:00:00Z","relpermalink":"/resource/install/","section":"resource","summary":"You will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.","tags":null,"title":"Installing R, RStudio, tidyverse, and tinytex","type":"docs"},{"authors":null,"categories":null,"content":"Learning R I highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.\nSearching for help with R on Google can sometimes be tricky because the program name is a single letter. Google is generally smart enough to figure out what you mean when you search for \u0026ldquo;r scatterplot\u0026rdquo;, but if it does struggle, try searching for \u0026ldquo;rstats\u0026rdquo; instead (e.g. \u0026ldquo;rstats scatterplot\u0026rdquo;).\nIf you use Twitter, post R-related questions and content with #rstats. The community there is exceptionally generous and helpful. Also check out StackOverflow (a Q\u0026amp;A site with hundreds of thousands of answers to all sorts of programming questions) and RStudio Community (a forum specifically designed for people using RStudio and the tidyverse (i.e. you)).\nThese resources are also really really helpful:\n R for Data Science: A free online book for learning the basics of R and the tidyverse. R and RStudio cheat sheets: A large collection of simple cheat sheets for RStudio, ggplot2, and other R-related things. Stat 545: Dr. Jenny Bryan at RStudio has an entire introductory course in R, visualization, and data analysis online. STA 112FS: Data Science: Dr. Mine Çetinkaya-Rundel at the University of Edinburgh / Duke University has an entire introductory course in R, visualization, and data science online. CSE 631: Principles \u0026amp; Practice of Data Visualization: Yet another introductory course for R and ggplot2 by Dr. Alison Presmanes Hill at RStudio.  R in the wild A popular (and increasingly standard) way for sharing your analyses and visualizations is to post an annotated explanation of your process somewhere online. RStudio allows you to publish knitted HTML files directly to RPubs, but you can also post your output to a blog or other type of website.^[If you want to be really fancy, you can use blogdown, which makes a complete website with R Markdown files. That\u0026rsquo;s actually how this site is built (see the source code). You can build your own site with this tutorial.] Reading these kinds of posts is one of the best ways to learn R, since they walk you through each step of the process and show the code and output.\nHere are some of the best examples I\u0026rsquo;ve come across:\n Text analysis of Trump\u0026rsquo;s tweets confirms he writes only the (angrier) Android half (with a follow-up) Bob Ross - Joy of Painting Bechdel analysis using the tidyverse: There are also a bunch of other examples using data from FiveThirtyEight. Sexism on the Silver Screen: Exploring film\u0026rsquo;s gender divide Comparison of Quentin Tarantino Movies by Box Office and the Bechdel Test Who came to vote in Utah\u0026rsquo;s caucuses? Health care indicators in Utah counties Song lyrics across the United States A decade (ish) of listening to Sigur Rós When is Tom peeping these days?: There are a also bunch of final projects from other R and data visualization classes here and here. Mapping Fall Foliage General (Attys) Distributions Disproving Approval  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"fd33fdc527a88c760dba0f467bb3657d","permalink":"/resource/r/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/r/","section":"resource","summary":"Learning R I highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.","tags":null,"title":"R","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el procesamiento de los datos a través de la transformación de las variables a utilizar. Para ello revisaremos procedimientos básicos para el manejo de datos con Rstudio.\n1. Recursos de la práctica En este práctico utilizaremos la base de datos de la Encuesta Desigualdades Económicas y Sociales (Desiguales)(2016), la cual fue procesada en el Práctico anterior.Recuerden siempre consultar el manual/libro de códigos antes de trabajar una base de datos.\n2. Librerias a utilizar En este práctico utilizaremos cuatro paquetes, el primero se llama pacman este facilita y agiliza la lectura de los paquetes a utilizar en R; el segundo es sjmisc, el tercero es car para recodificar y el cuarto es Tidyverse, este es una colección de paquetes de código abierto. De este último utilizaremos Dplyr y Forcast, si quieres averiguar más puedes ir acá\n Recuerden que previo a cargar la base de datos, se deben cargar los paquetes\n Primero instalamos pacman por unica vez\ninstall.packages(\u0026#34;pacman\u0026#34;) library (pacman) Luego cargaremos así los paquetes de R\npacman::p_load(tidyverse, car, sjmisc) 3. Cargar base de datos y explorarla datos \u0026lt;- read_sav(\u0026#34;../Rproject/datos_proc.sav\u0026#34;) En el panel Environment, visualizamos el nuevo objeto, que posee 2.613 observaciones (o filas), y 329 variables (o columnas). También podemos explorar la base de datos con los siguientes comandos\ndim(datos) # nos entrega las dimensiones, es decir el numero de observaciones y el número de variables view(datos) # se usa para visualizar la base de datos find_var() # se utiliza para encontrar variables names(datos) # entrega los nombres de las variables que componen el dataset head(datos) # muestra las primeras filas presentes en el marco de datos 4. Aspectos claves antes de comenzar Previo a trabajar con la base de datos, debemos conocer aspectos claves que facilitaran el uso y entendimiento de Rstudio\nOperador pipeline %\u0026gt;% El operador pipe %\u0026gt;% es útil para concatenar múltiples operaciones, el comando para usarlo es Ctrl + shift + M o Cmd + shift + M\nboolaenos y operadores lógicos Estos son símbolos lógicos que son utilizados en R para designar funciones.\n En primer lugar están los operadores relacionales, estos se usan para hacer comparaciones  \u0026lt;\tEste signo se usa para designar que un valor es menor que otro \u0026gt;\tEste es para designar que un valor es mayor que otro ==\tCon este se señala que un valor es igual que otro \u0026lt;=\tLa composición de estos dos símbolos se usa para decir que un valor es menor o igual que otro \u0026gt;=\tEsta para decir que un valor es mayor o igual que otro !=\tEste para decir que el valor es diferente que otro %in%\tEste significa que un valor pertenece al conjunto designado is.na\tEste es para asignar un valor como pérdido o NA !is.na\tEste para decir que un valor no es NA  En segundo lugar, están los operadores aritméticos, los cuales realizan operaciones, como la suma, resta, división, entre otros.\n  En tercer lugar, los operadores de asignación, es decir que están encargados de asignar valores a objetos\n  Finalmente, los operadores booleanos, los cuales describen relaciones lógicas, como:\n  \u0026amp;\tEste operador es la condición y, es decir si se cumplen todas condiciones mencionadas |\tEste es la condición o, es decir si se cumple una condición u otra mencionada xor()\tEste excluye o saca la condición mencionada !\tSignifica que no es la condición que se menciona any\tSignifica que ninguna de las condiciones serán utilizadas all Significa que todas las condiciones serán utilizadas 5. Transformación y selección de variables con tidyverse:Dplyr Dplyr proporciona una gramática de manipulación de datos, proporcionando un conjunto consistente de verbos que ayudan a resolver desafíos de manipulación de datos más comunes. Este posee diversas funciones, en estre práctico veremos las principales:\n5.1 select() Nuestra función select escoge variables basándose en sus nombres o funciones\nselección de las variables en la base de datos a utilizar Como lo vieron en el Práctico anterior se deben seleccionar las variables a utilizar, para ello usaremos la funcion select, sin embargo en este práctico profundizaremos sobre su uso.\ndatos_proc \u0026lt;- datos %\u0026gt;% # se crea un nuevo objeto llamado datos_proc_proc a partir de la base de datos_proc cargada, esto más el operador pipe select(edad = V6, # Con esta función se seleccionan las variables a utilizar en el práctico, asignándoles con \u0026#34;=\u0026#34; el nuevo nombre que llevará sexo = V2, garan_min_vid = V146, clase_sub = V70, just_pago_educ = V117) Se seleccionaron las variables\n Edad Sexo Rol Gobierno: garantizar minimo vida ¿En que clase social ubicaría a la gente como usted? Justo: mas pago, mejor educacion  Forcats de Tidyverse proporciona un conjunto de herramientas útiles que resuelven problemas comunes con factores. R usa factores para manejar variables categóricas, variables que tienen un conjunto fijo y conocido de valores posibles. Para eso asignaremos valores a las varibales que estan codificadas de forma numerica, pero son factores.\r\ras_factor (datos_proc$sexo) selección de las variables por indexación Además, se puede seleccionar variables, donde a partir de los datos_proc procesados se seleccionarán los casos que estén entre 1 y 2 de la variable \u0026lsquo;garan_min_vid\u0026rsquo;, que tiene como categoría de respuesta\n1 Muy de acuerdo\n2 De acuerdo\n3 Ni de acuerdo ni en desacuerdo\n4 En desacuerdo\n5 Muy en desacuerdo\nPara ello seleccionaremos sólo a las personas que estan de acuerdo de que el gobierno garantice un mínimo de vida.\ndatos_proc %\u0026gt;% select(1:2, garan_min_vid) # seleccionan las categorias de respuesta y luego la variable de donde lo seleccionarán ## # A tibble: 2,613 x 3 ## edad sexo garan_min_vid ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 1 [Hombre] 1 [Muy de acuerdo] ## 2 18 1 [Hombre] 1 [Muy de acuerdo] ## 3 66 2 [Mujer] 1 [Muy de acuerdo] ## 4 56 2 [Mujer] 2 [De acuerdo]  ## 5 63 1 [Hombre] 1 [Muy de acuerdo] ## 6 62 2 [Mujer] 1 [Muy de acuerdo] ## 7 54 1 [Hombre] 2 [De acuerdo]  ## 8 75 2 [Mujer] 2 [De acuerdo]  ## 9 36 2 [Mujer] 2 [De acuerdo]  ##10 40 2 [Mujer] 2 [De acuerdo]  ## # ... with 2,603 more rows En este caso seleccionamos todo según los datos de la variable garan_min_vid, con everything(). Que selecciona todas las columnas o las columnas que quedan después de aplicar las funciones de selección. Es decir las personas que estan de acuerdo con que el gobienro garantice un mínimo de vida.\ndatos_proc %\u0026gt;% select(garan_min_vid, everything()) ## # A tibble: 2,613 x 5 ## garan_min_vid edad sexo clase_sub just_pago_educ ## \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 1 [Muy de acuerd~ 40 1 [Hombr~ 4 [Clase media ~ 4 [En desacuerdo] ## 2 1 [Muy de acuerd~ 18 1 [Hombr~ 3 [Clase media] 3 [Ni de acuerdo ni en de~ ## 3 1 [Muy de acuerd~ 66 2 [Mujer] 3 [Clase media] 4 [En desacuerdo] ## 4 2 [De acuerdo] 56 2 [Mujer] 5 [Clase baja] 4 [En desacuerdo] ## 5 1 [Muy de acuerd~ 63 1 [Hombr~ 5 [Clase baja] 4 [En desacuerdo] ## 6 1 [Muy de acuerd~ 62 2 [Mujer] 4 [Clase media ~ 1 [Muy de acuerdo] ## 7 2 [De acuerdo] 54 1 [Hombr~ 4 [Clase media ~ 2 [De acuerdo] ## 8 2 [De acuerdo] 75 2 [Mujer] 5 [Clase baja] 4 [En desacuerdo] ## 9 2 [De acuerdo] 36 2 [Mujer] 4 [Clase media ~ 4 [En desacuerdo] ## 10 2 [De acuerdo] 40 2 [Mujer] 5 [Clase baja] 4 [En desacuerdo] ## # ... with 2,603 more rows Selección y renombrar También podemos seleccionar y renombrar, es decir, seleccionar según garan_min_vid y renombrar la variable cómo acuerdo_garan_min_vid\ndatos_proc %\u0026gt;% select(garan_min_vid, acuerdo_garan_min_vid = garan_min_vid ,everything()) ## # A tibble: 2,613 x 5 ## acuerdo_garan_min_~ edad sexo clase_sub just_pago_educ ## \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 1 [Muy de acuerdo] 40 1 [Hombr~ 4 [Clase media~ 4 [En desacuerdo] ## 2 1 [Muy de acuerdo] 18 1 [Hombr~ 3 [Clase media] 3 [Ni de acuerdo ni en d~ ## 3 1 [Muy de acuerdo] 66 2 [Mujer] 3 [Clase media] 4 [En desacuerdo] ## 4 2 [De acuerdo] 56 2 [Mujer] 5 [Clase baja] 4 [En desacuerdo] ## 5 1 [Muy de acuerdo] 63 1 [Hombr~ 5 [Clase baja] 4 [En desacuerdo] ## 6 1 [Muy de acuerdo] 62 2 [Mujer] 4 [Clase media~ 1 [Muy de acuerdo] ## 7 2 [De acuerdo] 54 1 [Hombr~ 4 [Clase media~ 2 [De acuerdo] ## 8 2 [De acuerdo] 75 2 [Mujer] 5 [Clase baja] 4 [En desacuerdo] ## 9 2 [De acuerdo] 36 2 [Mujer] 4 [Clase media~ 4 [En desacuerdo] ## 10 2 [De acuerdo] 40 2 [Mujer] 5 [Clase baja] 4 [En desacuerdo] ## # ... with 2,603 more rows Selección que inicia con prefijos (starts_with) y termina con sufijos (ends_with) El primer ejemplo muestra la selección de casos que inicien con la variable edad y que terminen con sexo\ndatos_proc %\u0026gt;% select(starts_with(\u0026#34;edad\u0026#34;), ends_with(\u0026#34;sexo\u0026#34;)) ## # A tibble: 2,613 x 2 ## edad sexo ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 1 [Hombre] ## 2 18 1 [Hombre] ## 3 66 2 [Mujer] ## 4 56 2 [Mujer] ## 5 63 1 [Hombre] ## 6 62 2 [Mujer] ## 7 54 1 [Hombre] ## 8 75 2 [Mujer] ## 9 36 2 [Mujer] ## 10 40 2 [Mujer] ## # ... with 2,603 more rows Selección que contiene cadenas (contains) El segundo selecciona los casos que contienen una letra m o los que contienen una letra y\ndatos_proc %\u0026gt;% select(contains(\u0026#34;m\u0026#34;)|contains(\u0026#34;y\u0026#34;)) ## # A tibble: 2,613 x 1 ## garan_min_vid ## \u0026lt;dbl+lbl\u0026gt; ## 1 1 [Muy de acuerdo] ## 2 1 [Muy de acuerdo] ## 3 1 [Muy de acuerdo] ## 4 2 [De acuerdo] ## 5 1 [Muy de acuerdo] ## 6 1 [Muy de acuerdo] ## 7 2 [De acuerdo] ## 8 2 [De acuerdo] ## 9 2 [De acuerdo] ## 10 2 [De acuerdo] ## # ... with 2,603 more rows Selección con expresiones (matches) El último ejemplo, selecciona las variables que contengan el nombre sexo\ndatos_proc %\u0026gt;% select(matches(\u0026#34;sexo\u0026#34;)) ## # A tibble: 2,613 x 1 ## sexo ## \u0026lt;dbl+lbl\u0026gt; ## 1 1 [Hombre] ## 2 1 [Hombre] ## 3 2 [Mujer] ## 4 2 [Mujer] ## 5 1 [Hombre] ## 6 2 [Mujer] ## 7 1 [Hombre] ## 8 2 [Mujer] ## 9 2 [Mujer] ## 10 2 [Mujer] ## # ... with 2,603 more rows Selección y función where La función select puede combinarse con la función where, es decir selecciona con la condición cuando, en este caso selecciona cuando el valor es numérico.\ndatos_proc %\u0026gt;% select(where(is.numeric)) ## # A tibble: 2,613 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 1 [Hombr~ 1 [Muy de acuerd~ 4 [Clase media ~ 4 [En desacuerdo] ## 2 18 1 [Hombr~ 1 [Muy de acuerd~ 3 [Clase media] 3 [Ni de acuerdo ni en de~ ## 3 66 2 [Mujer] 1 [Muy de acuerd~ 3 [Clase media] 4 [En desacuerdo] ## 4 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 5 63 1 [Hombr~ 1 [Muy de acuerd~ 5 [Clase baja] 4 [En desacuerdo] ## 6 62 2 [Mujer] 1 [Muy de acuerd~ 4 [Clase media ~ 1 [Muy de acuerdo] ## 7 54 1 [Hombr~ 2 [De acuerdo] 4 [Clase media ~ 2 [De acuerdo] ## 8 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 9 36 2 [Mujer] 2 [De acuerdo] 4 [Clase media ~ 4 [En desacuerdo] ## 10 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## # ... with 2,603 more rows 5.2 filter() La función filter de dplyr, escoge o extrae filas basados en sus valores, subdivide un data frame, reteniendo todas las filas que satisfacen sus condiciones.\nAntes de esto, hay que tener en cuenta que para establecer las condiciones a utilizar en las funciones debemos usar operadores, ya que la estructutra será filter(data, variable (operador lógico) condición)\nFiltar según caracteres A la hora de filtrar según caracteres nuestro primer ejemplo nos muestra cómo filtrar los datos excluyendo el sexo Hombre\nfilter(datos_proc, sexo != \u0026#34;Hombre\u0026#34;) ## # A tibble: 1,601 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 66 Mujer 1 [Muy de acuerdo] 3 [Clase media] 4 [En desacuerdo]  ## 2 56 Mujer 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 3 62 Mujer 1 [Muy de acuerdo] 4 [Clase media baja] 1 [Muy de acuerdo]  ## 4 75 Mujer 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 5 36 Mujer 2 [De acuerdo] 4 [Clase media baja] 4 [En desacuerdo]  ## 6 40 Mujer 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 7 29 Mujer 2 [De acuerdo] 2 [Clase media alta] 4 [En desacuerdo]  ## 8 53 Mujer 2 [De acuerdo] 3 [Clase media] 4 [En desacuerdo]  ## 9 31 Mujer 2 [De acuerdo] 5 [Clase baja] 5 [Muy en desacuerdo] ## 10 48 Mujer 2 [De acuerdo] 3 [Clase media] 5 [Muy en desacuerdo] ## # ... with 1,591 more rows \u0026gt; Ahora si queremos filtrar y dejar sólo a los hombres, se usa el operador ==\nfilter(datos_proc, sexo == \u0026#34;hombre\u0026#34;) ## # A tibble: 0 x 5 ## # ... with 5 variables: edad \u0026lt;dbl\u0026gt;, sexo \u0026lt;fct\u0026gt;, garan_min_vid \u0026lt;dbl+lbl\u0026gt;, clase_sub \u0026lt;dbl+lbl\u0026gt;, just_pago_educ \u0026lt;dbl+lbl\u0026gt; En este caso no sirvio el comando porque no esta escrito correctamente (Sin mayúscula)\nfilter(datos_proc, sexo == \u0026#34;Hombre\u0026#34;) ## # A tibble: 1,012 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 Hombre 1 [Muy de acuerdo] 4 [Clase media baja] 4 [En desacuerdo]  ## 2 18 Hombre 1 [Muy de acuerdo] 3 [Clase media] 3 [Ni de acuerdo ni en desacuerdo] ## 3 63 Hombre 1 [Muy de acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 4 54 Hombre 2 [De acuerdo] 4 [Clase media baja] 2 [De acuerdo]  ## 5 18 Hombre 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 6 20 Hombre 2 [De acuerdo] 4 [Clase media baja] 3 [Ni de acuerdo ni en desacuerdo] ## 7 23 Hombre 2 [De acuerdo] 4 [Clase media baja] 3 [Ni de acuerdo ni en desacuerdo] ## 8 26 Hombre 1 [Muy de acuerdo] 4 [Clase media baja] 3 [Ni de acuerdo ni en desacuerdo] ## 9 27 Hombre 3 [Ni de acuerdo ni en desacuerdo] 4 [Clase media baja] 3 [Ni de acuerdo ni en desacuerdo] ## 10 63 Hombre 2 [De acuerdo] 3 [Clase media] 2 [De acuerdo]  ## # ... with 1,002 more rows Finalmente, si queremos filtrar según un conjunto de caracteres, usamos el operador %in% y nos quedamos con mujeres y hombres\nfilter(datos_proc, sexo %in% c(\u0026#34;Mujer\u0026#34;, \u0026#34;Hombre\u0026#34;)) ## # A tibble: 0 x 5 ## # ... with 5 variables: edad \u0026lt;dbl\u0026gt;, sexo \u0026lt;dbl+lbl\u0026gt;, garan_min_vid \u0026lt;dbl+lbl\u0026gt;, ## # clase_sub \u0026lt;dbl+lbl\u0026gt;, just_pago_educ \u0026lt;dbl+lbl\u0026gt; Filtar según números Ahora filtraremos según datos numéricos\nEn este caso queremos dejar todos los casos que sean de clase media, clase media baja, o clase baja\nfilter(datos_proc, clase_sub \u0026gt; 3) ## # A tibble: 1,284 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 1 [Hombre] 1 [Muy de acuerdo] 4 [Clase media baja] 4 [En desacuerdo] ## 2 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 3 63 1 [Hombre] 1 [Muy de acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 4 62 2 [Mujer] 1 [Muy de acuerdo] 4 [Clase media baja] 1 [Muy de acuerdo] ## 5 54 1 [Hombre] 2 [De acuerdo] 4 [Clase media baja] 2 [De acuerdo] ## 6 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 7 36 2 [Mujer] 2 [De acuerdo] 4 [Clase media baja] 4 [En desacuerdo] ## 8 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 9 31 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 5 [Muy en desacuerd~ ## 10 18 1 [Hombre] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## # ... with 1,274 more rows Acá podemos ver que parten desde Clase media baja, pero si queremos considerar la Clase media, usamos el operador mayor o igual. Además con el operador \u0026amp; nos añadirá también a las mujeres\nfilter(datos_proc, clase_sub \u0026gt;= 3) ## # A tibble: 2,174 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 1 [Hombr~ 1 [Muy de acuerd~ 4 [Clase media ~ 4 [En desacuerdo] ## 2 18 1 [Hombr~ 1 [Muy de acuerd~ 3 [Clase media] 3 [Ni de acuerdo ni en de~ ## 3 66 2 [Mujer] 1 [Muy de acuerd~ 3 [Clase media] 4 [En desacuerdo] ## 4 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 5 63 1 [Hombr~ 1 [Muy de acuerd~ 5 [Clase baja] 4 [En desacuerdo] ## 6 62 2 [Mujer] 1 [Muy de acuerd~ 4 [Clase media ~ 1 [Muy de acuerdo] ## 7 54 1 [Hombr~ 2 [De acuerdo] 4 [Clase media ~ 2 [De acuerdo] ## 8 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 9 36 2 [Mujer] 2 [De acuerdo] 4 [Clase media ~ 4 [En desacuerdo] ## 10 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## # ... with 2,164 more rows 5.3 mutate () La función de mutate añade nuevas variables que son funciones de variables existentes, es decir transforma datos existentes de un data frame a nuevas columnas.\ncreación de variable a partir de cálculos En nuestro primer ejemplo, crearemos una variable a partir de un cálculo, la llamaremos nueva variable y será la suma de 2 y 3, su estructura será mutate(datos_proc, nueva_variable = calculo/condicion)\nmutate(datos_proc, nueva_variable = 3+2) ## # A tibble: 2,613 x 6 ## edad sexo garan_min_vid clase_sub just_pago_educ nueva_variable ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 40 1 [Homb~ 1 [Muy de acue~ 4 [Clase m~ 4 [En desacuerdo] 5 ## 2 18 1 [Homb~ 1 [Muy de acue~ 3 [Clase m~ 3 [Ni de acuerdo n~ 5 ## 3 66 2 [Muje~ 1 [Muy de acue~ 3 [Clase m~ 4 [En desacuerdo] 5 ## 4 56 2 [Muje~ 2 [De acuerdo] 5 [Clase b~ 4 [En desacuerdo] 5 ## 5 63 1 [Homb~ 1 [Muy de acue~ 5 [Clase b~ 4 [En desacuerdo] 5 ## 6 62 2 [Muje~ 1 [Muy de acue~ 4 [Clase m~ 1 [Muy de acuerdo] 5 ## 7 54 1 [Homb~ 2 [De acuerdo] 4 [Clase m~ 2 [De acuerdo] 5 ## 8 75 2 [Muje~ 2 [De acuerdo] 5 [Clase b~ 4 [En desacuerdo] 5 ## 9 36 2 [Muje~ 2 [De acuerdo] 4 [Clase m~ 4 [En desacuerdo] 5 ## 10 40 2 [Muje~ 2 [De acuerdo] 5 [Clase b~ 4 [En desacuerdo] 5 ## # ... with 2,603 more rows Mutate y filter Pero ¿Qué pasa si quiero crear una variable y filtrar?, para eso usaremos el operador pipe. Entonces a partir de los datos, unimos las operaciones de filter, que nos extraerá los valores que sean mayores o iguales a 3 (clase media) y que además estén en conjunto de mujeres. Además unimos la operación de mutare que creará una nueva variable que será igual al valor 5\ndatos_proc %\u0026gt;% filter(clase_sub \u0026gt;= 3 \u0026amp; sexo %in% c(\u0026#34;Mujer\u0026#34;)) %\u0026gt;% mutate(nueva_variable = 3+2) ## # A tibble: 0 x 6 ## # ... with 6 variables: edad \u0026lt;dbl\u0026gt;, sexo \u0026lt;dbl+lbl\u0026gt;, garan_min_vid \u0026lt;dbl+lbl\u0026gt;, ## # clase_sub \u0026lt;dbl+lbl\u0026gt;, just_pago_educ \u0026lt;dbl+lbl\u0026gt;, nueva_variable \u0026lt;dbl\u0026gt; 5.3.1 recode() La función denominada recode puede reemplazar valores numéricos en base a su posición o su nombre, y valores de caracteres o factores sólo por su nombre.\nFactors Para reemplazar caracteres o factores en este caso de la variable sexo, transformaremos las categorias de respuestas de Mujer a Femenino y de Hombre a Masculino\ndatos_proc %\u0026gt;% mutate(sexo = recode(sexo, \u0026#34;Mujer\u0026#34; = \u0026#34;Femenino\u0026#34;, \u0026#34;Hombre\u0026#34; = \u0026#34;Masculino\u0026#34;)) ## # A tibble: 2,613 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 Masculino 1 [Muy de acuerdo] 4 [Clase media baja] 4 [En desacuerdo]  ## 2 18 Masculino 1 [Muy de acuerdo] 3 [Clase media] 3 [Ni de acuerdo ni en desacuerdo] ## 3 66 Femenino 1 [Muy de acuerdo] 3 [Clase media] 4 [En desacuerdo]  ## 4 56 Femenino 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 5 63 Masculino 1 [Muy de acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 6 62 Femenino 1 [Muy de acuerdo] 4 [Clase media baja] 1 [Muy de acuerdo]  ## 7 54 Masculino 2 [De acuerdo] 4 [Clase media baja] 2 [De acuerdo]  ## 8 75 Femenino 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## 9 36 Femenino 2 [De acuerdo] 4 [Clase media baja] 4 [En desacuerdo]  ## 10 40 Femenino 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo]  ## # ... with 2,603 more rows Numeric Luego transformaremos las categorias de respuesta de 1 a 5 en el grado de acuerdo o desacuerdo. Previo a esto es necesario recodificar la variable como caracter, en este caso se establece que los numeros que tiene la variable son categorias, es decir 1 es la categoría 1 y no un número. Ver la diferencia entre character y factor en el práctico anterior\ndatos_proc$just_pago_educ \u0026lt;- as.character(datos_proc$just_pago_educ) datos_proc %\u0026gt;% mutate(just_pago_educ = recode (just_pago_educ, \u0026#34;1\u0026#34; = \u0026#34;Muy de acuerdo\u0026#34;, \u0026#34;2\u0026#34; = \u0026#34;De acuerdo\u0026#34;, \u0026#34;3\u0026#34; = \u0026#34;Ni de acuerdo ni en desacuerdo\u0026#34;, \u0026#34;4\u0026#34; = \u0026#34;En desacuerdo\u0026#34;, \u0026#34;5\u0026#34; = \u0026#34;Muy en desacuerdo\u0026#34;)) ## # A tibble: 2,613 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ  ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;chr\u0026gt;  ## 1 40 Hombre 1 [Muy de acuerdo] 4 [Clase media baja] En desacuerdo  ## 2 18 Hombre 1 [Muy de acuerdo] 3 [Clase media] Ni de acuerdo ni en desacuerdo ## 3 66 Mujer 1 [Muy de acuerdo] 3 [Clase media] En desacuerdo  ## 4 56 Mujer 2 [De acuerdo] 5 [Clase baja] En desacuerdo  ## 5 63 Hombre 1 [Muy de acuerdo] 5 [Clase baja] En desacuerdo  ## 6 62 Mujer 1 [Muy de acuerdo] 4 [Clase media baja] Muy de acuerdo  ## 7 54 Hombre 2 [De acuerdo] 4 [Clase media baja] De acuerdo  ## 8 75 Mujer 2 [De acuerdo] 5 [Clase baja] En desacuerdo  ## 9 36 Mujer 2 [De acuerdo] 4 [Clase media baja] En desacuerdo  ## 10 40 Mujer 2 [De acuerdo] 5 [Clase baja] En desacuerdo  ## # ... with 2,603 more rows Si bien en este caso más simple usar el comando de Forcast as_factor, en ocasiones la/el investigador puede requerir tener distintos nombres de categorias, por lo que resultaría más útil este procedimiento.\n5.3.2 if_else() La función if_else comprueba condiciones lógicas en su primer argumento, en este caso queremos crear una nueva variable denominada d_sexo que cumpla la condición que la categoría Mujer sea visualizado como 1 y los demás como 0, su estructura será if_else(condition, Verdadero, Falso)\ndatos_proc %\u0026gt;% mutate(d_sexo = if_else(sexo == \u0026#34;Mujer\u0026#34;, 1, 0)) ## # A tibble: 2,613 x 6 ## edad sexo garan_min_vid clase_sub just_pago_educ d_sexo ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; ## 1 40 Hombre 1 [Muy de acuerdo] 4 [Clase media baja] 4 0 ## 2 18 Hombre 1 [Muy de acuerdo] 3 [Clase media] 3 0 ## 3 66 Mujer 1 [Muy de acuerdo] 3 [Clase media] 4 1 ## 4 56 Mujer 2 [De acuerdo] 5 [Clase baja] 4 1 ## 5 63 Hombre 1 [Muy de acuerdo] 5 [Clase baja] 4 0 ## 6 62 Mujer 1 [Muy de acuerdo] 4 [Clase media baja] 1 1 ## 7 54 Hombre 2 [De acuerdo] 4 [Clase media baja] 2 0 ## 8 75 Mujer 2 [De acuerdo] 5 [Clase baja] 4 1 ## 9 36 Mujer 2 [De acuerdo] 4 [Clase media baja] 4 1 ## 10 40 Mujer 2 [De acuerdo] 5 [Clase baja] 4 1 ## # ... with 2,603 more rows En nuestro segundo ejemplo, creamos una variable llamada validador, que si just_pago_educ tiene un caso NA la variable tendrá categoría de respuesta False y sino será True\ndatos_proc %\u0026gt;% mutate(validador = if_else(is.na(just_pago_educ), FALSE, TRUE)) ## # A tibble: 2,613 x 6 ## edad sexo garan_min_vid clase_sub just_pago_educ validador ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;lgl\u0026gt; ## 1 40 1 [Hombr~ 1 [Muy de acue~ 4 [Clase med~ 4 [En desacuerdo] TRUE ## 2 18 1 [Hombr~ 1 [Muy de acue~ 3 [Clase med~ 3 [Ni de acuerdo ni ~ TRUE ## 3 66 2 [Mujer] 1 [Muy de acue~ 3 [Clase med~ 4 [En desacuerdo] TRUE ## 4 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baj~ 4 [En desacuerdo] TRUE ## 5 63 1 [Hombr~ 1 [Muy de acue~ 5 [Clase baj~ 4 [En desacuerdo] TRUE ## 6 62 2 [Mujer] 1 [Muy de acue~ 4 [Clase med~ 1 [Muy de acuerdo] TRUE ## 7 54 1 [Hombr~ 2 [De acuerdo] 4 [Clase med~ 2 [De acuerdo] TRUE ## 8 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baj~ 4 [En desacuerdo] TRUE ## 9 36 2 [Mujer] 2 [De acuerdo] 4 [Clase med~ 4 [En desacuerdo] TRUE ## 10 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baj~ 4 [En desacuerdo] TRUE ## # ... with 2,603 more rows 5.3.3 mutate group_by n() La función group_by toma datos existentes y lo convierte en datos agrupados, en nuestro primer ejemplo, los agrupa por la variable sexo y luego crearemos la variable n_sexo\ndatos_proc %\u0026gt;% group_by(sexo) ## # A tibble: 2,613 x 5 ## # Groups: sexo [2] ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 40 1 [Hombr~ 1 [Muy de acuerd~ 4 [Clase media ~ 4 [En desacuerdo] ## 2 18 1 [Hombr~ 1 [Muy de acuerd~ 3 [Clase media] 3 [Ni de acuerdo ni en de~ ## 3 66 2 [Mujer] 1 [Muy de acuerd~ 3 [Clase media] 4 [En desacuerdo] ## 4 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 5 63 1 [Hombr~ 1 [Muy de acuerd~ 5 [Clase baja] 4 [En desacuerdo] ## 6 62 2 [Mujer] 1 [Muy de acuerd~ 4 [Clase media ~ 1 [Muy de acuerdo] ## 7 54 1 [Hombr~ 2 [De acuerdo] 4 [Clase media ~ 2 [De acuerdo] ## 8 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## 9 36 2 [Mujer] 2 [De acuerdo] 4 [Clase media ~ 4 [En desacuerdo] ## 10 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] ## # ... with 2,603 more rows datos_proc %\u0026gt;% mutate(n_sexo = n()) ## # A tibble: 2,613 x 6 ## edad sexo garan_min_vid clase_sub just_pago_educ n_sexo ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;int\u0026gt; ## 1 40 1 [Hombr~ 1 [Muy de acue~ 4 [Clase medi~ 4 [En desacuerdo] 2613 ## 2 18 1 [Hombr~ 1 [Muy de acue~ 3 [Clase medi~ 3 [Ni de acuerdo ni en~ 2613 ## 3 66 2 [Mujer] 1 [Muy de acue~ 3 [Clase medi~ 4 [En desacuerdo] 2613 ## 4 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] 2613 ## 5 63 1 [Hombr~ 1 [Muy de acue~ 5 [Clase baja] 4 [En desacuerdo] 2613 ## 6 62 2 [Mujer] 1 [Muy de acue~ 4 [Clase medi~ 1 [Muy de acuerdo] 2613 ## 7 54 1 [Hombr~ 2 [De acuerdo] 4 [Clase medi~ 2 [De acuerdo] 2613 ## 8 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] 2613 ## 9 36 2 [Mujer] 2 [De acuerdo] 4 [Clase medi~ 4 [En desacuerdo] 2613 ## 10 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] 2613 ## # ... with 2,603 more rows También podemos hacer ambas operaciones en un sólo comando\ndatos_proc %\u0026gt;% group_by(sexo) %\u0026gt;% mutate(n_sexo = n()) ## # A tibble: 2,613 x 6 ## # Groups: sexo [2] ## edad sexo garan_min_vid clase_sub just_pago_educ n_sexo ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;int\u0026gt; ## 1 40 1 [Hombr~ 1 [Muy de acue~ 4 [Clase medi~ 4 [En desacuerdo] 1012 ## 2 18 1 [Hombr~ 1 [Muy de acue~ 3 [Clase medi~ 3 [Ni de acuerdo ni en~ 1012 ## 3 66 2 [Mujer] 1 [Muy de acue~ 3 [Clase medi~ 4 [En desacuerdo] 1601 ## 4 56 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] 1601 ## 5 63 1 [Hombr~ 1 [Muy de acue~ 5 [Clase baja] 4 [En desacuerdo] 1012 ## 6 62 2 [Mujer] 1 [Muy de acue~ 4 [Clase medi~ 1 [Muy de acuerdo] 1601 ## 7 54 1 [Hombr~ 2 [De acuerdo] 4 [Clase medi~ 2 [De acuerdo] 1012 ## 8 75 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] 1601 ## 9 36 2 [Mujer] 2 [De acuerdo] 4 [Clase medi~ 4 [En desacuerdo] 1601 ## 10 40 2 [Mujer] 2 [De acuerdo] 5 [Clase baja] 4 [En desacuerdo] 1601 ## # ... with 2,603 more rows 5.4 summarise La función summarise resume dato a una sola fila de valores, en nuestro primer ejemplo, toma los datos creados anteriormente y los resume a un solo valor\ndatos_proc %\u0026gt;% summarise(n_sexo = n()) ## # A tibble: 1 x 1 ## n_sexo ## \u0026lt;int\u0026gt; ## 1 2613 En nuestro segundo ejemplo, creamos una nueva tabla donde nos agrupara los datos según sexo y además resumirá los casos\ndatos_proc %\u0026gt;% group_by(sexo) %\u0026gt;% summarise(n_sexo = n()) ## # A tibble: 2 x 2 ## sexo n_sexo ## \u0026lt;dbl+lbl\u0026gt; \u0026lt;int\u0026gt; ## 1 1 [Hombre] 1012 ## 2 2 [Mujer] 1601 6. Resumen con procesamiento de las variables Previo a la manipulación de los datos es necesario conocer como se distribuye esta por eso el paso inicial es un descriptivo de las variables a procesar. Para ello, usaremos la función frq del paquete sjmisc, que permite analizar la frecuencia las variables que no sean numericas. Para las variables numericas, en cambio, usaremos la función descr del mismo paquete, que nos entregará las medidas de tendencia central, dispersión y posición de la variable. Ver práctico anterior\ndescr(datos_proc$edad) #Usar la función descr con la variable edad de los datos datos_proc. ## ## ## Basic descriptive statistics ## ## var type label n NA.prc mean sd se md trimmed range ## dd numeric Edad (anyos) 2613 0 45.54 17.68 0.35 45 44.75 78 (18-96) ## iqr skew ## 29 0.29 frq(datos_proc$sexo) ## ## Sexo del entrevistado (x) \u0026lt;numeric\u0026gt; ## # total N=2613 valid N=2613 mean=1.61 sd=0.49 ## ## Value | Label | N | Raw % | Valid % | Cum. % ## ------------------------------------------------ ## 1 | Hombre | 1012 | 38.73 | 38.73 | 38.73 ## 2 | Mujer | 1601 | 61.27 | 61.27 | 100.00 ## \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; frq(datos_proc$garan_min_vid) ## ## P35 - Rol Gobierno: garantizar minimo vida (x) \u0026lt;numeric\u0026gt; ## # total N=2613 valid N=2613 mean=2.09 sd=1.24 ## ## Value | Label | N | Raw % | Valid % | Cum. % ## ------------------------------------------------------------------------ ## 1 | Muy de acuerdo | 836 | 31.99 | 31.99 | 31.99 ## 2 | De acuerdo | 1226 | 46.92 | 46.92 | 78.91 ## 3 | Ni de acuerdo ni en desacuerdo | 285 | 10.91 | 10.91 | 89.82 ## 4 | En desacuerdo | 153 | 5.86 | 5.86 | 95.68 ## 5 | Muy en desacuerdo | 67 | 2.56 | 2.56 | 98.24 ## 8 | NS (no leer) | 41 | 1.57 | 1.57 | 99.81 ## 9 | NR (no leer) | 5 | 0.19 | 0.19 | 100.00 ## \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; frq(datos_proc$clase_sub) ## ## P14 - ¿En qué clase social ubicaría a la gente como usted? (x) \u0026lt;numeric\u0026gt; ## # total N=2613 valid N=2613 mean=3.47 sd=1.09 ## ## Value | Label | N | Raw % | Valid % | Cum. % ## --------------------------------------------------------- ## 1 | Clase alta | 119 | 4.55 | 4.55 | 4.55 ## 2 | Clase media alta | 320 | 12.25 | 12.25 | 16.80 ## 3 | Clase media | 890 | 34.06 | 34.06 | 50.86 ## 4 | Clase media baja | 807 | 30.88 | 30.88 | 81.75 ## 5 | Clase baja | 468 | 17.91 | 17.91 | 99.66 ## 8 | NS (no leer) | 9 | 0.34 | 0.34 | 100.00 ## 9 | NR (no leer) | 0 | 0.00 | 0.00 | 100.00 ## \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; frq(datos_proc$just_pago_educ) ## ## P25 - Justo: mas pago, mejor educacion (x) \u0026lt;numeric\u0026gt; ## # total N=2613 valid N=2613 mean=3.50 sd=1.29 ## ## Value | Label | N | Raw % | Valid % | Cum. % ## ----------------------------------------------------------------------- ## 1 | Muy de acuerdo | 157 | 6.01 | 6.01 | 6.01 ## 2 | De acuerdo | 559 | 21.39 | 21.39 | 27.40 ## 3 | Ni de acuerdo ni en desacuerdo | 346 | 13.24 | 13.24 | 40.64 ## 4 | En desacuerdo | 997 | 38.16 | 38.16 | 78.80 ## 5 | Muy en desacuerdo | 528 | 20.21 | 20.21 | 99.00 ## 8 | NS (no leer) | 20 | 0.77 | 0.77 | 99.77 ## 9 | NR (no leer) | 6 | 0.23 | 0.23 | 100.00 ## \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; Luego debemos recodificar las variables según sean necesario, para ello utilizaremos las librerias car y Dplyr\nPara la libreria car recodificaremos todas las categorias de respuesta como no sabe (NS) o no responde(NR) en NA\u0026rsquo;s\ndatos_proc$garan_min_vid \u0026lt;- car::recode(datos_proc$garan_min_vid, \u0026#34;c(8, 9)=NA\u0026#34;) #acá con :: especificamos qué libreria usar datos_proc$clase_sub \u0026lt;- car::recode(datos_proc$clase_sub, \u0026#34;c(8, 9)=NA\u0026#34;) datos_proc$just_pago_educ \u0026lt;- car::recode(datos_proc$just_pago_educ, \u0026#34;c(8, 9)=NA\u0026#34;) Tambien podemos recodificar para agruparlas\ndatos_proc$just_pago_educ \u0026lt;- car::recode(datos_proc$just_pago_educ, \u0026#34;1:2=1;3=2;4:5=3\u0026#34;) Luego con Dplyr le asignamos nuevos valores\ndatos_proc %\u0026gt;% mutate(just_pago_educ = recode (just_pago_educ, \u0026#34;1\u0026#34; = \u0026#34;a favor\u0026#34;, \u0026#34;2\u0026#34; = \u0026#34;neutro\u0026#34;, \u0026#34;3\u0026#34; = \u0026#34;en contra\u0026#34;)) ## # A tibble: 2,613 x 5 ## edad sexo garan_min_vid clase_sub just_pago_educ ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;chr\u0026gt;  ## 1 40 Hombre 1 [Muy de acuerdo] 4 [Clase media baja] en contra  ## 2 18 Hombre 1 [Muy de acuerdo] 3 [Clase media] neutro  ## 3 66 Mujer 1 [Muy de acuerdo] 3 [Clase media] en contra  ## 4 56 Mujer 2 [De acuerdo] 5 [Clase baja] en contra  ## 5 63 Hombre 1 [Muy de acuerdo] 5 [Clase baja] en contra  ## 6 62 Mujer 1 [Muy de acuerdo] 4 [Clase media baja] a favor  ## 7 54 Hombre 2 [De acuerdo] 4 [Clase media baja] a favor  ## 8 75 Mujer 2 [De acuerdo] 5 [Clase baja] en contra  ## 9 36 Mujer 2 [De acuerdo] 4 [Clase media baja] en contra  ## 10 40 Mujer 2 [De acuerdo] 5 [Clase baja] en contra  ## # ... with 2,603 more rows 7. Guardar base procesada Para guardar la base de datos procesada, debes dirigir la ruta hacia tu Rproject\nsave(datos_proc, data = \u0026#34;../Rproject/datos_proc.RData\u0026#34;) 8. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso! En https://learn-r.formr.org/. Te llegó un código único a tu correo electrónico. Mediante él debes acceder para actualizar tu estado de avance del curso.\n","date":1630281600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630281600,"objectID":"f3d97bcfb35ff647d4d9f85dd4966420","permalink":"/example/04-practico/","publishdate":"2021-08-30T00:00:00Z","relpermalink":"/example/04-practico/","section":"example","summary":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el procesamiento de los datos a través de la transformación de las variables a utilizar. Para ello revisaremos procedimientos básicos para el manejo de datos con Rstudio.","tags":null,"title":"Transformar y seleccionar variables","type":"docs"},{"authors":null,"categories":null,"content":"Instrucciones Esta tarea debe ser resolvida en GitHub Class Room. Para acceder a la  Tarea N°0 hacer click aquí. Si aún tienes dudas de cómo interactuar con GitHub Class Roomm revisa el práctico\nObjetivo de la tarea y resultados del aprendizaje El objetivo de esta tarea es ser una breve introducción a GitHub. Para ello debes leer la siguiente guía y responder algunas preguntas. Luego de responder esas preguntas debes hacer \u0026ldquo;push\u0026rdquo; a tu tarea.\nBásicos: antes de iniciar Perfil de usuario Su página de perfil le dice a la gente la historia de su trabajo a través de los repositorios que le interesan, las contribuciones que ha hecho y las conversaciones que ha tenido. No olvides que tu cuenta de GitHub te permite acceder a RStudio Cloud y a otros beneficios como estudiante.\nUsando markdown en GitHub (¡y pronto en R!) Sí\u0026hellip; estas escribiendo en algo que parece una consola. Este texto plano te permite escribir y comunicar sin restricciones de software. Markdown se abre en todos los editores de texto, y no requiere ser pagado (como en Word). También se pueden incorporar imágenes, remarcar palabras o hacerlas cursivas. Aprenderemos de esto la próxima sesión, pero si te quieres adelantar revisa esto.\n1. Git and GitHub  Git es un sistema de control de versiones distribuido (VCS), lo que significa que es una herramienta útil para rastrear fácilmente los cambios en su código, colaborar y compartir. Con Git puede realizar un seguimiento de los cambios que realiza en su proyecto para que siempre tenga un registro de lo que ha trabajado y pueda volver fácilmente a una versión anterior si es necesario. También facilita el trabajo con otras personas: ¡varios grupos de personas pueden trabajar juntas en el mismo proyecto y fusionar sus cambios en una fuente final!\nGitHub es una forma de usar el mismo poder de Git todo en línea con una interfaz fácil de usar. Se utiliza en todo el mundo del software y más allá para colaborar y mantener el historial de proyectos.\n2. El flujo de GitHub El flujo de trabajo en GitHub permite experimentar y colaborar en sus proyectos fácilmente, sin el riesgo de perder su trabajo anterior. Revisemos sus partes:\n2.1 Repositorios Un repositorio es donde ocurre el trabajo de su proyecto; como la carpeta de su proyecto. Contiene todos los archivos y el historial de revisiones de su proyecto. Puede trabajar solo dentro de un repositorio o invitar a otros a colaborar con usted en esos archivos.\nDentro de los repositorios encontrarás los archivos README.md (o léame). Estos archivos de extensión markdown (.md) indican información general o básica de su proyecto.\nPara obtener más información sobre los repositorios, lea \u0026ldquo;Creating, Cloning, and Archiving Repositories y \u0026ldquo;About README\u0026rsquo;s\u0026rdquo;.\n2.2 Clonar Cuando se crea un repositorio con GitHub, se almacena de forma remota en la nube. Puede clonar un repositorio para crear una copia local en su computadora y luego usar GitHub Desktop para sincronizar los dos. Para obtener más información sobre la clonación, lea \u0026ldquo;clonación de un repositorio\u0026rdquo;.\n2.3 Commit y Push Commit y Push es la forma en que puede agregar los cambios que realizó en su computador local al repositorio remoto en GitHub. De esa manera, la profesora y/o compañeras/os de curso pueden ver su último trabajo cuando está listo para compartirlo.\n  El \u0026ldquo;commit\u0026rdquo;: mensaje descriptivo \u0026ldquo;útil\u0026rdquo; para recordar y comunicar el cambio que se hizo (eg. \u0026ldquo;Agregué análisis descriptivo\u0026rdquo; o \u0026ldquo;Edité los gráficos\u0026rdquo;).\n  El \u0026ldquo;push\u0026rdquo;: comando que permite subir el cambio una vez que hayas confirmado que quieres subir este cambio. En un push puedes tener varios \u0026ldquo;commits\u0026rdquo; de un proyecto.\n  2.4 Otros términos del flujo Los siguientes conceptos no los utilizaremos en el curso, pero de todas formas nunca está demás conocerlos.\nBranches Son ramas de los repositorios. Uno puede tomar el \u0026ldquo;tronco\u0026rdquo; principal de un proyecto-repositorio (main o master) y experimentar con él mientras otros también lo hacen. Una vez que quieres mostrar los cambios o tests que hiciste en el repositorio, puedes solicitar su revisión a través de un pull request.\nPara obtener más información sobre los branches, lea \u0026ldquo;About Branches\u0026rdquo;.\nForks Un Fork es otra forma de copiar un repositorio, pero generalmente se usa cuando desea copiar un proyecto o contribuir en este. Esto le permite experimentar libremente con los cambios sin afectar el proyecto original y es muy popular cuando se contribuye a proyectos de software de código abierto. Para obtener más información sobre Forks, lea \u0026ldquo;Fork a repo\u0026rdquo;\nPull requests Ya lo mencionábamos. Cuando trabajamos con \u0026ldquo;branches\u0026rdquo; (ramas) utilizamos las \u0026ldquo;pull request\u0026rdquo; o solicitdes para informar a otros sobre los cambios que desea realizar y solicitar sus comentarios. Dentro de estas solicitudes se pueden discutir y revisar cada uno de los cambios.\nUna vez que una solicitud está lista para usarse, se puede fusionar en su rama principal (merge to master). Para obtener más información sobre las solicitudes de estracción, lea \u0026ldquo;About Pull Requests\u0026rdquo;.\nTarea 0 Luego de leer esta breve introducción, debes contestar esta guía:\n ¿Cuál es tu nombre?  R:\n¿Cuál es la diferencia entre R y RStudio?  R:\n ¿Con qué comando puedes subir los cambios del repositorio local al remoto?\n  Crea un .Rproject llamado 00-tarea.Rproject\n  En el repositorio, crea una carpeta llamada \u0026ldquo;imagenes\u0026rdquo;. Dentro de esta carpeta deja una imagen de tu sociólogo/a o cientista social preferido/a. Al archivo debes llamarlo \u0026ldquo;sociologo-preferido.jpg\u0026rdquo;\n  Recursos ¿Quiéres aprender más? Siempre es posible. Te dejamos unos documentos adicionales\n   Un breve video que explica qué es GitHub\n   Recursos de aprendizaje de Git y GitHub\n   Comprender el flujo de GitHub\n  ","date":1628467200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628467200,"objectID":"17efecf651d12019a6b85f14614e017d","permalink":"/assignment/00-tarea/","publishdate":"2021-08-09T00:00:00Z","relpermalink":"/assignment/00-tarea/","section":"assignment","summary":"Instrucciones Esta tarea debe ser resolvida en GitHub Class Room. Para acceder a la  Tarea N°0 hacer click aquí. Si aún tienes dudas de cómo interactuar con GitHub Class Roomm revisa el práctico","tags":null,"title":"Tarea 0. Colaborando en GitHub","type":"docs"},{"authors":null,"categories":null,"content":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nIntroducción\r\rR enviroment\r\rR comunicación\r\rLibrerías para el uso de R\r\rDetalles del curso\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver los comandos específicos para navegar en ellas.\r\rVideo de la clase Recomendaciones    Hadley Wickham, “Data Science: How is it Different To Statistics?”\n   Tutoriales, “Learn-R”\n Instalación de softwares     Contestar reporte de registro\n  ","date":1628467200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628467200,"objectID":"24bdef858b9ebc83bb0134c283e06cf1","permalink":"/content/01-content/","publishdate":"2021-08-09T00:00:00Z","relpermalink":"/content/01-content/","section":"content","summary":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nIntroducción\r\rR enviroment\r\rR comunicación\r\rLibrerías para el uso de R\r\rDetalles del curso\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ?","tags":null,"title":"Herramientas para el uso de R","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo del práctico El objetivo del práctico es introducirnos en herramientas que permiten establecer un flujo de trabajo en R. Para ello, utilizaremos GitHub que es una plataforma que permite alojar los .Rprojects y códigos de cada uno de ustedes. De hecho, tal como mostraremos en el práctico, utilizaremos GitHubClassRoom para que ustedes puedan subir sus tareas.\nPrevio a esto, deben ver el Tutorial de instalación de R.\nAhora aprenderemos a colaborar y resolver las tareas.\n1. GitHub Es un sistema de control de versiones en línea que rastrea los cambios de códigos, facilita la colaboración y el acceso abierto. En este curso será un programa esencial para el desarrollo tanto de clases como prácticos, por lo que en este práctico vamos a aprender a utilizarlo repasando aspectos básicos. Esto además será profundizado y detallado en clases.\nVentajas: Las principales ventajas son:\n  Facilita el flujo del trabajo y la colaboración entre usuarios\n  Es de acceso abierto\n  Permite hacer seguimiento a los errores\n  Tiene variedades de funciones y plataformas\n  Pero la plataforma central en el curso será GitHub Classroom\n2. Github Classroom Es una plataforma de Github que facilita la interacción y aprendizaje entre estudiantes y profesores. Esta plataforma la usaremos a lo largo del curso, principalmente porque permite estudiantes trabajen individual y colectivamente usando los repositorios de github. En esta plataforma entregarán sus tareas, recibirán comentarios y retroalimentaciones pudiendo trabajar colaborativamente.\n Pasos para ingresar a Github classroom    Crear cuenta:\n  Dirigirse al Link\n   Clickear en “Crea una cuenta”\n  Introduce tu correo electrónico\n  Crea una contraseña\n  Introduce el nombre de usuario (similar a su nombre)\n  Clickear en Crear una cuenta\n   Ve al correo electrónico que pusiste anteriormente\n  Copia el código e introdúcelo en la página\n  Recuerda que el correo que uses debe ser el mismo correo que usaste en pasos anteriores. Ver tutorial 1.\r\r3. Github Desktop Esta aplicación es una versión de Github que puede ser instalada tanto en windows como en mac. Facilitando el uso de Github a través de la coordinación de los cambios locales y la plataforma.\na. Instalar Github Desktop\nb. Dirigirse a Link\nc. Crea una carpeta para los contenidos del curso\nd. Vincula la dirección de la carpeta\nPara Windows   Clickear en Download for Windows (64bit)\n  Ejecutar el archivo descargado\n  Introduce tu usuario y contraseña\n  Para Mac   Clickear en Download for macOS\n  Ejecutar el archivo descargado\n  Introduce tu usuario y contraseña\n  \r4. Botones principales en GitHub Desktop:   Clone repository: Copia un repositorio a tu computador\n  Create new repository: crea un nuevo repositorio\n  Add existing repository: incorpora un repositorio existente\n    Open the repository in Rstudio: Abre todo el proyecto en Rstudio\n  View the files of your repository in explorer: Muestra los archivos en la carpeta que se encuentra\n  Open the repository on Github: abre el repositorio en la página\n  Commit to master: forma de guardar los cambios\n  Push origin: manda los cambios al repositorio en línea\n  5. Conceptos claves de Github   Repositorios: Es donde se alberga el trabajo, como una carpeta que contiene todos los archivos y el historial de cambios realizados. Estos se almacenan en la nube\n  Cloning: Los repositorios pueden clonarse creando copias locales que extraen toda la información y antiguas versiones del repositorio. Después se puede ir subiendo los cambios para sincronizar la copia local y la copia de github.\n  Commit: Es la forma de guardar el estado de tu proyecto, como una captura en la que se deja un mensaje informativo\n  Push: Esta es la forma en la que se puede agregar ( subir ) los cambios locales al repositorio de Github.\n  README: Se utiliza a modo de presentación o introducción de los repositorios.\n  Pull: Esta es la forma en la que se puede agregar ( bajar ) los cambios del repositorio de Github al repositorio local.\n  Flujo de trabajo colectivo y de acceso abierto   Forks: Es otra forma de copiar un repositorio, permitiendo hacer cambios sin afectar al proyecto original.\n  Pull requests: Es una forma de solicitar que sean incorporados los cambios que has hecho desde un repositorio local, al repositorio original.\n  6. GitHub Class Room del curso (learn-R-UAH) Pasos para las dinámicas del curso\n6.1 Recibir una tarea 6.2 Ingresa el link a. El link contiene la tarea, ustedes deben aceptar la tarea la cual creará un repositorio que contendrá la información y las instrucciones de la tarea.\nb. Para eso deben ir a GitHub Desktop, clonar el respositorio desde internet.\nc. Luego deben escoger el repositorio de la tarea, escoger la carpeta en la que se encontrará y clonarlo\nd. Después deben abrir el repositorio creado a través de RStudio, ahí verán el mismo contenido pero en un archivo .md\n6.3 Resolver una tarea a. Ahora resolveremos la Tarea 0 en conjunto, una vez abierto el repositorio clonado, recuerden que es en este repositorio donde deben completar y subir la tarea\nb. La tarea se encuentra en un archivo llamado *README* con información de los conceptos básicos y el flujo de GitHub, deben leerlo detalladamente.\nc. Una vez leido deberán ir al final del archivo en Tarea 0 y responder las preguntas correspondientes\n6.4 Tarea 0 ¡Puedes ver las instrucciones de la tarea en el siguiente link o en GitHub Class Room\n6.5 Subir una tarea a. Una vez listo, deberán subir la tarea al repositorio remoto a través de GitHub Desktop\n6.6 Recibir comentarios a. Les llegará un correo con los comentarios y retroalimentación de su tarea\n7. Video tutorial en Youtube Recuerden que el video de asociado a este práctico y muchos más podrán encontrarlos en el canal de youtube del curso\n\r\r8. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso! En https://learn-r.formr.org/. Te llegó un código único a tu correo electrónico. Mediante él debes acceder para actualizar tu estado de avance del curso.\n","date":1628467200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628467200,"objectID":"1c54211c51c2690aaec09991c5ab4895","permalink":"/example/01-practico/","publishdate":"2021-08-09T00:00:00Z","relpermalink":"/example/01-practico/","section":"example","summary":"0. Objetivo del práctico El objetivo del práctico es introducirnos en herramientas que permiten establecer un flujo de trabajo en R. Para ello, utilizaremos GitHub que es una plataforma que permite alojar los .","tags":null,"title":"Bienvenido/a a R, RStudio y Github","type":"docs"},{"authors":null,"categories":null,"content":"R Markdown is regular Markdown with R code and output sprinkled in. You can do everything you can with regular Markdown, but you can incorporate graphs, tables, and other R output directly in your document. You can create HTML, PDF, and Word documents, PowerPoint and HTML presentations, websites, books, and even interactive dashboards with R Markdown. This whole course website is created with R Markdown (and a package named blogdown).\nThe documentation for R Markdown is extremely comprehensive, and their tutorials and cheatsheets are excellent—rely on those.\nHere are the most important things you\u0026rsquo;ll need to know about R Markdown in this class:\nKey terms   Document: A Markdown file where you type stuff\n  Chunk: A piece of R code that is included in your document. It looks like this:\n```{r} # Code goes here ``` There must be an empty line before and after the chunk. The final three backticks must be the only thing on the line—if you add more text, or if you forget to add the backticks, or accidentally delete the backticks, your document will not knit correctly.\n  Knit: When you \u0026ldquo;knit\u0026rdquo; a document, R runs each of the chunks sequentially and converts the output of each chunk into Markdown. R then runs the knitted document through pandoc to convert it to HTML or PDF or Word (or whatever output you\u0026rsquo;ve selected).\nYou can knit by clicking on the \u0026ldquo;Knit\u0026rdquo; button at the top of the editor window, or by pressing ⌘⇧K on macOS or control + shift + K on Windows.\n  Add chunks There are three ways to insert chunks:\n  Press ⌘⌥I on macOS or control + alt + I on Windows\n  Click on the \u0026ldquo;Insert\u0026rdquo; button at the top of the editor window\n  Manually type all the backticks and curly braces (don\u0026rsquo;t do this)\n  Chunk names You can add names to chunks to make it easier to navigate your document. If you click on the little dropdown menu at the bottom of your editor in RStudio, you can see a table of contents that shows all the headings and chunks. If you name chunks, they\u0026rsquo;ll appear in the list. If you don\u0026rsquo;t include a name, the chunk will still show up, but you won\u0026rsquo;t know what it does.\nTo add a name, include it immediately after the {r in the first line of the chunk. Names cannot contain spaces, but they can contain underscores and dashes. All chunk names in your document must be unique.\n```{r name-of-this-chunk} # Code goes here ``` Chunk options There are a bunch of different options you can set for each chunk. You can see a complete list in the RMarkdown Reference Guide or at knitr\u0026rsquo;s website.\nOptions go inside the {r} section of the chunk:\n```{r name-of-this-chunk, warning=FALSE, message=FALSE} # Code goes here ``` The most common chunk options are these:\n fig.width=5 and fig.height=3 (or whatever number you want): Set the dimensions for figures echo=FALSE: The code is not shown in the final document, but the results are message=FALSE: Any messages that R generates (like all the notes that appear after you load a package) are omitted warning=FALSE: Any warnings that R generates are omitted include=FALSE: The chunk still runs, but the code and results are not included in the final document  You can also set chunk options by clicking on the little gear icon in the top right corner of any chunk:\nInline chunks You can also include R output directly in your text, which is really helpful if you want to report numbers from your analysis. To do this, use `r r_code_here`.\nIt\u0026rsquo;s generally easiest to calculate numbers in a regular chunk beforehand and then use an inline chunk to display the value in your text. For instance, this document…\n```{r find-avg-mpg, echo=FALSE} avg_mpg \u0026lt;- mean(mtcars$mpg) ``` The average fuel efficiency for cars from 1974 was `r round(avg_mpg, 1)` miles per gallon. … would knit into this:\n The average fuel efficiency for cars from 1974 was 20.1 miles per gallon.\n Output formats You can specify what kind of document you create when you knit in the YAML front matter.\ntitle: \u0026#34;My document\u0026#34; output: html_document: default pdf_document: default word_document: default You can also click on the down arrow on the \u0026ldquo;Knit\u0026rdquo; button to choose the output and generate the appropriate YAML. If you click on the gear icon next to the \u0026ldquo;Knit\u0026rdquo; button and choose \u0026ldquo;Output options\u0026rdquo;, you change settings for each specific output type, like default figure dimensions or whether or not a table of contents is included.\nThe first output type listed under output: will be what is generated when you click on the \u0026ldquo;Knit\u0026rdquo; button or press the keyboard shortcut (⌘⇧K on macOS; control + shift + K on Windows). If you choose a different output with the \u0026ldquo;Knit\u0026rdquo; button menu, that output will be moved to the top of the output section.\nThe indentation of the YAML section matters, especially when you have settings nested under each output type. Here\u0026rsquo;s what a typical output section might look like:\n--- title: \u0026#34;My document\u0026#34; author: \u0026#34;My name\u0026#34; date: \u0026#34;January 13, 2020\u0026#34; output: html_document: toc: yes fig_caption: yes fig_height: 8 fig_width: 10 pdf_document: latex_engine: xelatex  # More modern PDF typesetting engine toc: yes word_document: toc: yes fig_caption: yes fig_height: 4 fig_width: 5 --- ","date":1578873600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578873600,"objectID":"4c95f77a8fb69d2c5ee2e6b67bcae08b","permalink":"/resource/rmarkdown/","publishdate":"2020-01-13T00:00:00Z","relpermalink":"/resource/rmarkdown/","section":"resource","summary":"R Markdown is regular Markdown with R code and output sprinkled in. You can do everything you can with regular Markdown, but you can incorporate graphs, tables, and other R output directly in your document.","tags":null,"title":"Using R Markdown","type":"docs"},{"authors":null,"categories":null,"content":"\r\r\rClases (): Esta página contiene las presentaciones, sesiones grabadas y lecturas correspondientes al tema.\n\rPrácticos (): Esta página contiene los ejercicios prácticos asociados a cada sesión de clase. Podrás encontrar tanto el código de R cómo, en algunos casos, los videos grabados del live coding. Esta página será muy importante para la entrega de las tareas.\n\rTareas (): Esta página contiene las instrucciones para cada tarea. Las tareas pueden ser entregadas hasta el día viernes a las 23.59 de la semana correspondiente.\n\r\rPuedes suscribir la planificación del curso con la URL del calendario en Outlook, Google Calendar o Apple Calendar:\n \r\r\rAnálisis Estadístico en R\rClases\rPrácticos\rTareas\rTalleres\r\r9-16 de agosto\rUnidad 1. Elementos y herramientas básicos de R\r\r\r\r\r\r\r\r\r\r9 Agosto\n(Sesión 1)\r1.1 R enviroment: interfaz de RStudio, elementos de script, workspace\n1.2 Prácticas y herramientas de consulta: CRAN, stackoverflow, Rcommunity\n1.3 Herramientas para la colaboración y comunicación: Rprojects, GitHub y Slack\r\r\r\r\r\r16 Agosto\n(Sesión 2)\r1.4 Librerías y funciones para las ciencias sociales: tidyverse y sj (sjmisc y sjPlot)\n1.5 Construcción de reportes reproducibles e integrados con código: Rmarkdown\r\r\r\r\r\r\r23 Agosto-6 Septiembre\rUnidad 2. Manipulación y limpieza de datos\r\r\r\r\r\r\r\r\r\r23 Agosto\n(Sesión 3)\r2.1 Importar/exportar datos en diferentes formatos\n2.2 Validación y limpieza de variables\r\r\r\r\r\r\r30 Agosto\n(Sesión 4)\r2.3 Transformación y selección de variables\r\r\r\r\r\r\r\r6 Septiembre\n(Sesión 5)\r2.4 Transformación de datos en tidydata\r\r\r\r\r\r\r13-20 Septiembre\rUnidad 3. Análisis estadístico descriptivo en R\r\r\r\r\r\r\r\r\r\r13 Septiembre\n(Sesión 6)\r3.1 Análisis descriptivos univariados: medidas de tendencia central, dispersión y frecuencias\n3.2 Análisis bivariado: tablas de contingencia, correlaciones y ANOVA\r\r\r\r\r\r\r20 Septiembre\rSemana de receso\r\r\r\r\r\r\r\r\r27 Septiembre-8 Noviembre\rUnidad 4. Análisis estadístico inferencial en R\r\r\r\r\r\r\r\r\r\r27 Septiembre\n(Sesión 7)\r4.1 Muestras complejas y precisión de inferencia estadística\r\r\r\r\r\r\r4 Octubre\n(Sesión 8)\r4.2 Pruebas de hipótesis y representación gráfica\r\r\r\r\r\r\r\r11 Octubre\rFeriado\r\r\r\r\r\r\r\r\r\r18 Octubre\n(Sesión 9)\r4.3 Regresiones lineales, predictores categóricos y representación gráfica\r\r\r\r\r\r\r\r25 Octubre\n(Sesión 10)\r4.4 Regresiones logísticas, exponenciación y representación gráfica\r\r\r\r\r\r\r1 Noviembre\rFeriado\r\r\r\r\r\r\r\r\r\r8 Noviembre\n(Sesión 11)\r4.5 Calidad de modelos y otras técnicas de estimación\r\r\r\r\r\r\r\r15 Noviembre\rReceso\r\r\r\r\r\r\r\r\r\r22 Noviembre\r Entrega final\r\r\r\r\r\r\r\r\r\rResumen Evaluaciones\rClases\rPrácticos\rTareas\rTalleres\r\r9 Agosto-13 Agosto\r Tarea 0: Colaborando en Github\r\r\r\r\r\r\r\r\r16 Agosto-20 Agosto\r Tarea 1: Reporte en Rmarkdown\r\r\r\r\r\r\r\r\r6 Septiembre-10 septiembre\r Tarea 2: Procesamiento de datos\r\r\r\r\r\r\r\r\r13 Septiembre-17 septiembre\r Tarea 3: Análisis descriptivo\r\r\r\r\r\r\r\r\r27 Septiembre-1 octubre\r Tarea 4: Muestras complejas\r\r\r\r\r\r\r\r\r25 octubre-29 octubre\r Tarea 5: Regresiones en R\r\r\r\r\r\r\r\r\r22 Noviembre\r Entrega investigación final\r\r\r\r\r\r\r\r\r\r\r\rPuedes descargar el programa apretando el siguiente botón:\r\r","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3e223d7ba58b0122b42458e4cf52e04c","permalink":"/schedule/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/schedule/","section":"","summary":"Clases (): Esta página contiene las presentaciones, sesiones grabadas y lecturas correspondientes al tema.\n\rPrácticos (): Esta página contiene los ejercicios prácticos asociados a cada sesión de clase.","tags":null,"title":"Calendario","type":"page"},{"authors":null,"categories":null,"content":"\r\r\rPresentación\r\rDescripción\rObjetivos\r\rObjetivo general\rObjetivos específicos\r\r\rI. Contenidos\r\rUnidad 1. Elementos y herramientas básicos de R\rUnidad 2. Manipulación y limpieza de datos\rUnidad 3. Análisis estadístico descriptivo en R\rUnidad 4. Análisis estadístico inferencial en R\r\rII. Metodología del curso\r\rRecursos principales de aprendizaje\r\rIII. Evaluación de aprendizajes\rIV. Calendario de actividades\rV. Recursos pedagógicos\r\r1. Referencias bibliográficas\r2. Sitios de consulta\r\rDescargar programa en pdf\r\r\rDocente\r Valentina Andrade\rvalentinaandrade.netlify.app/\r valentinaandrade@uchile.cl\r @valentiandrade\r Agendar reunión\r\r\rAyudantes\r Dafne Jaime\r dafne.jaime@ug.uchile.cl\r Agendar reunión\r Nicolas Godoy\r nicolas.godoy.m@ug.uchile.cl\r Agendar reunión\r\r\rDetalles del curso\r Clases: Lunes 16.30-17.40\r Práctico: Lunes 18.00-19.20\r Online, en link de Zoom Slack\r\r\rContacto\rEl canal de contacto de preferencia es Slack, y en segunda instancia, email.\n\r\rPresentación\rR es uno de los lenguajes de programación estadística más populares y demandados del último tiempo. Una de las razones principales es que tanto el software como la comunidad que hace uso de este se maneja en un marco de la ciencia abierta (r Open Science Tools o rOpensci), permitiendo el desarrollo constante de una serie de herramientas que permiten mejorar nuestras investigaciones, de manera libre, gratis y colaborativa.\nPara las ciencias sociales estos elementos no son triviales. Es frecuente encontrarse con personas de nuestro campo que se están iniciando en R y desisten de este intento dada la frustración y pensamientos de incapacidad. Aprender R puede ser difícil al iniciar – es como aprender cualquier otro lenguaje o idioma -, y poco se ha pensado en cómo implementar enseñanza a grupos más expuestos a estos prejuicios, como en las ciencias sociales y humanidades.\nSe propone que un curso de introducción de R para análisis de datos sociales puede abordar estos desafíos basado en enseñar herramientas concretas que faciliten y potencien las investigaciones sociales. Basada en la experiencia de enseñanza de R en contextos similares, esto implica introducir prácticas del rOpensci como la colaboración y reproducibilidad, que facilitan sin duda el aprendizaje colectivo y la calidad de los productos desarrollados durante el curso.\n¡Iniciemos este desafío juntas/os!\nDescripción\rEste curso busca introducir a estudiante en el uso de R y RStudio para el análisis de datos sociales. En ese sentido, será una introducción al entorno R y a la interfaz de RStudio para su uso en contextos académicos. Al mismo tiempo, el curso profundiza en temas específicos para las ciencias sociales como el análisis estadístico y la presentación de resultados (visualización de datos).\n\rObjetivos\rObjetivo general\rAprender las principales herramientas para el análisis de datos sociales en RStudio, con el fin de lograr un uso autónomo del software\n\rObjetivos específicos\rEl curso no es un curso de programación en R , sino que una aplicación concreta del uso de R para ciencias sociales. Por ello, el curso tiene como propósito específico que los estudiantes sean capaces de\nManejar R y herramientas asociadas a su utilización (rOpensci), utilizando prácticas que les permitan avanzar en su aprendizaje de manera autónoma (Unidad 1)\n\rManipular, procesar y limpiar datos sociales utilizando R (Unidad 2)\n\rAplicar herramientas para análisis estadísticos descriptivos en R (Unidad 3)\n\rAplicar herramientas para análisis estadísticos inferenciales en R (Unidad 4)\n\rPresentar de resultados, a partir de la visualización de datos y construcción de documentos (transversal a todas las unidades)\n\r\r\r\r\rI. Contenidos\rUnidad 1. Elementos y herramientas básicos de R\r1.1 R enviroment: interfaz de RStudio, elementos de script, workspace\n1.2 Prácticas y herramientas de consulta: CRAN, stackoverflow, Rcommunity\n1.3 Herramientas para la colaboración y comunicación: Rprojects, GitHub y Slack\n1.4 Librerías y funciones para las ciencias sociales: tidyverse y sj (sjmisc y sjPlot)\n1.5 Construcción de reportes reproducibles e integrados con código: RMarkdown\n\rUnidad 2. Manipulación y limpieza de datos\r2.1 Importar y exportar datos en diferentes formatos\n2.2 Validación y limpieza de variables (missing values)\n2.3 Transformación y selección de variables\n2.4 Transformación de datos en tidydata con tidyr\n\rUnidad 3. Análisis estadístico descriptivo en R\r3.1 Análisis descriptivos univariados: medidas de tendencia central, dispersión y frecuencias\n3.2 Análisis descriptivo bivariado: tablas de contingencia, correlaciones y ANOVA\n3.3 Representación gráfica con sjPlot: Likert, proporciones agrupadas y distribuciones\n\rUnidad 4. Análisis estadístico inferencial en R\r4.1 Muestras complejas y precisión de inferencia estadística con survey y srvyr\n4.2 Pruebas de hipótesis y representación gráfica\n4.3 Regresiones lineales, predictores categóricos y representación gráfica\n4.4 Regresiones logísticas, exponenciación y representación gráfica\n4.5 Ajuste de modelos (performance) y otras representaciones gráficas (predicción, efectos marginales e interacciones)\n\r\rII. Metodología del curso\rDado el contexto de pandemia se tendrán tres espacios principales de aprendizaje:\nSesiones de clases lectivas (), donde se presentarán los aspectos centrales de los contenidos correspondientes a la semana vía Zoom. Tanto el documento de presentación como el video de la clase se encontrará disponible en la pestaña de Clases de este sitio web del curso.\n\rPrácticas guiadas (): cada tema de las sesiones se acompaña de una guía práctica de aplicación de contenidos, y que estarán disponibles en la pestaña Prácticos. Estas guías están diseñadas para ser desarrolladas de manera autónoma por cada estudiante semana a semana. También serán desarrolladas y revisadas cada semana en grupos pequeños con supervisión de ayudantes para dar mayor oportunidad de participación y resolver las dudas respectivas.\n\r\r Existe un reporte de progreso asociado a estas guías que deberá ser completado una vez que finalices cada práctica. Estos se realizan con fines de monitoreo y retroalimentación.\n\rLink \r\rTareas: se desarrollarán 6 tareas que les permitirán aplicar contenidos y replicar lo aprendido en los prácticos en base a una base de datos seleccionada por ustedes al inicio de semestre. Esto permitirá no solo recibir retroalimentación constante, sino que aprender con datos que puedan ser útiles para otros proyectos de investigación que sean de su interés.\r\rRecursos principales de aprendizaje\r1. Sitio web\nEl curso tiene disponible este sitio web, que he programado pues permite integrar texto y código de R, junto con hacer interactuar con otras plataformas como el foro Disqus y Github.\n2. R, RStudio y RStudio Cloud \nEl software que se utilizará principalmente será R y su interfaz RStudio. Ahora bien, muchos usuario/as de R presentan problemas de instalación dada la capacidad de sus computadores y sistemas operativos. Por ello se promoverá el uso del servicio gratuito de RStudio.cloud , que permite ejecutar la interfaz de RStudio en el navegador web y compartir el código de manera sincrónica con la docente. Dado el enfoque rOpensci, las plantillas para ejemplos, ejercicios y mini proyectos podrán ser implementados en esta plataforma. Si bien no es ideal pues tiene limitantes de memoria, mientras ustedes asimilan el programa será una buena herramienta.\n3. Slack \nSlack es una herramienta de uso frecuente en equipos de trabajo que utilizan R pues permite integrar script (o código) de distintos lenguajes en el chat. Se tendrá un espacio de trabajo en la app Slack que permite que cualquier persona del curso pueda hacer preguntas y cualquiera pueda responder. Esta es una de las prácticas que se promoverán en el curso pues es probable que los estudiantes tengan dudas similares a las de sus compañeros, por lo que las respuestas de la docente, ayudante y otros compañeros serán de libre disposición de todo el curso. Dentro del Slack se tendrán canales para hacer preguntas sobre las sesiones, tareas y proyectos, y el link que permite unirse a este estará disponible en el sitio del curso.\n Guía de uso de slack\n Unirse a slack de curso\n4. GitHub \nGithub es una plataforma online que permite depositar archivos y el control de versiones (VCS), por lo que se ha transformado una herramienta fácil y popular para corregir, colaborar y compartir códigos de distintos lenguajes (no solo R). Utilizaremos esta plataforma para subir las tareas, ayudarlos/as de manera directa con su código y darles feedback.\n5. Zotero \nZotero es un gestor bibliográfico que permite sistematizar las referencias y archivos utilizados en una investigación o informe. Enseñaremos este de manera complementaria pues este software se puede integrar en los documentos escritos hechos en R.\n\r\rIII. Evaluación de aprendizajes\rLas evaluaciones del curso se componen de tareas (70% de la nota final) y la entrega de una investigación (30% de la nota final), en dónde en ambos casos la/el estudiante deberá seleccionar datos y temas de interés de modo de acercar la aplicación del software a contextos de investigación propios de la/el estudiante. En concreto, cada evaluación consiste en:\n1. Tareas (70% de la nota final): consisten en evaluaciones parciales temáticas que buscan poner en práctica los aprendizajes expuestos en la sesión de clases y herramientas reforzadas en los prácticos. El promedio de notas las de tareas será calculado solo con las cuatro mejores entregas a partir de la Tarea 1 (25% c/u)1. La evaluación es individual o en parejas (la misma durante todo el semestre).\n2. Investigación final (30% de la nota final): consiste en una evaluación final que aplica los conocimientos y herramientas entregadas a lo largo de curso, a un proyecto de investigación de elección por el/la estudiante. La evaluación es individual.\n\rIV. Calendario de actividades\rEl calendario de actividades se puede revisar con detención en la pestaña planificación. Un resumen breve de las tareas es\n\r\rEvaluación\rFormato\rFecha\rPonderación Nota Final\r\r\r\rTarea\r4 tareas2\rHasta Viernes de la semana informada\r70% (25% c/u)\r\rInvestigación\rÚnica entrega\r22 de noviembre\r30%\r\r\r\r\rV. Recursos pedagógicos\r1. Referencias bibliográficas\r\rWickham, H., \u0026amp; Grolemund, G. (2016). R for data science: import, tidy, transform, visualize, and model data (First edition). Sebastopol: O’Reilly. Libro con enfoque en el aprendizaje de R. Disponible en español como “R para ciencia de datos”\n\rDaniel Lüdecke (2021) Data Visualization for Statistics in Social Science R package version 2.8.7\n\rWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686\n\rYihui Xie, J. J. Allaire, Garrett Grolemund (2021) R Markdown: The Definitive Guide\n\rBryan, Jenny (2019) Happy Git in R\n\r\r\r2. Sitios de consulta\r\rrOpensci (R Open Scicnce Tools)\rLaboratorio de Ciencia Social Abierta, Centro de Estudios de Conflicto y Cohesión Social (LISA-COES)\rStackoverflow\rRStudio Community\rRMarkdown\rsjPlot\rtidyverse\r\r\r\rDescargar programa en pdf\r\n\r\rEs decir, a lo largo del semestre deberá entregar 6 tareas: 5 calificadas (Tarea 1 a Tarea 5) y 1 no (Tarea 0). De las 5 tareas restantes, solo las 4 mejores serán consideradas en su promedio de las tareas.↩︎\n\rEs decir, a lo largo del semestre deberá entregar 6 tareas: 5 calificadas (Tarea 1 a Tarea 5) y 1 no (Tarea 0). De las 5 tareas restantes, solo las 4 mejores serán consideradas en su promedio de las tareas.↩︎\n\r\r\r","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e4d5a4a79239f08c6ad0d7cbf1be756c","permalink":"/syllabus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/syllabus/","section":"","summary":"Presentación\r\rDescripción\rObjetivos\r\rObjetivo general\rObjetivos específicos\r\r\rI. Contenidos\r\rUnidad 1. Elementos y herramientas básicos de R\rUnidad 2. Manipulación y limpieza de datos\rUnidad 3.","tags":null,"title":"Syllabus","type":"page"}]